/*引入字体*/
@import url("http://fonts.googleapis.com/css?family=Sniglet");

*{
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}


/*H：
Hue(色调)。0(或360)表示红色，120表示绿色，240表示蓝色，也可取其他数值来指定颜色。取值为：0 - 360
S：
Saturation(饱和度)。取值为：0.0% - 100.0%
L：
Lightness(亮度)。取值为：0.0% - 100.0%
*/
body{
	padding-top: 100px;
	background: hsl(180, 50%, 60%);
	font-family: Sniglet;
}
main{
	width: 500px;
	margin: 0 auto;
	padding-bottom: 10px;
	background: white;
	border-radius: 3px;
	overflow: hidden;
}
h1{
	font-size: 24px;
	font-weight: normal;
	background: hsl(120, 40%, 95%);
	color: hsl(120, 40%, 40%);
	text-align: center;
	padding: 20px 0;
	margin-bottom: 40px; 
}

.flp{
	padding: 0 50px;
}
.flp div{
	position: relative;
	margin-bottom: 30px;
}

.flp input, .flp label{
	width: 400px;
	display: block;
	font: inherit;
	font-size: 16px;
	line-height: 24px;
	height: 46px;
	border: 1px solid #999;
}

.flp input{
	padding: 10px;
	outline: none;
	border-radius: 3px;
}
.flp label{
	position: absolute;
	left: 0;
	top: 0;
	padding: 10px 8px;
	border-color: transparent;
	color: #666;
	cursor: text;
}


.ch{
	display: block;
	float: left;
	position: relative;
	background: white;
}
.ch:first-child{
	padding-left: 2px;
}
.ch:last-child{
	padding-right: 2px
}




/*
none：元素永远不会成为鼠标事件的target。但是，当其后代元素的pointer-events属性指定其他值时，
鼠标事件可以指向后代元素，在这种情况下，鼠标事件将在捕获或冒泡阶触发父元素的事件侦听器。

使用pointer-events来阻止元素成为鼠标事件目标不一定意味着元素上的事件侦听器永不会触发。
如果元素后代明确指定了pointer-events属性并允许其成为鼠标事件的目标，那么指向该元素的任何事件
在事件传播过程中都将通过父元素，并以适当的方式触发其上的事件侦听器。当然位于屏幕上在父元素上
但不在后代元素上的鼠标活动都不会被父元素和后代元素捕获（将会穿过父元素而指向位于其下面的元素）。
*/
.focussed{
	pointer-events: none;
}